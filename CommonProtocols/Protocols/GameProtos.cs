// Generated by ProtoGen, Version=2.4.1.555, Culture=neutral, PublicKeyToken=55f7125234beb589.  DO NOT EDIT!
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.ProtocolBuffers;
using pbc = global::Google.ProtocolBuffers.Collections;
using pbd = global::Google.ProtocolBuffers.Descriptors;
using scg = global::System.Collections.Generic;
namespace Com.Virtuos.Rocket.NetworkMessage {
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public static partial class GameProtos {
  
    #region Extension registration
    public static void RegisterAllExtensions(pb::ExtensionRegistry registry) {
      registry.Add(global::Com.Virtuos.Rocket.NetworkMessage.ActionCommitedRequest.RequestNumber);
    }
    #endregion
    #region Static variables
    internal static pbd::MessageDescriptor internal__static_virtuos_ActionCommitedRequest__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::Com.Virtuos.Rocket.NetworkMessage.ActionCommitedRequest, global::Com.Virtuos.Rocket.NetworkMessage.ActionCommitedRequest.Builder> internal__static_virtuos_ActionCommitedRequest__FieldAccessorTable;
    #endregion
    #region Descriptor
    public static pbd::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbd::FileDescriptor descriptor;
    
    static GameProtos() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "ChJ2aXJ0dW9zL2dhbWUucHJvdG8SB3ZpcnR1b3MaJGdvb2dsZS9wcm90b2J1", 
            "Zi9jc2hhcnBfb3B0aW9ucy5wcm90bxoUdmlydHVvcy9jb21tb24ucHJvdG8i", 
            "hwEKFUFjdGlvbkNvbW1pdGVkUmVxdWVzdBIPCgdnYW1lX2lkGAIgASgDEhIK", 
            "CnR1cm5faW5kZXgYAyABKAUySQoOcmVxdWVzdF9udW1iZXISEC52aXJ0dW9z", 
            "Lk1lc3NhZ2UYiwQgASgLMh4udmlydHVvcy5BY3Rpb25Db21taXRlZFJlcXVl", 
            "c3RCNEgBwj4vCiFDb20uVmlydHVvcy5Sb2NrZXQuTmV0d29ya01lc3NhZ2US", 
          "CkdhbWVQcm90b3M="));
      pbd::FileDescriptor.InternalDescriptorAssigner assigner = delegate(pbd::FileDescriptor root) {
        descriptor = root;
        internal__static_virtuos_ActionCommitedRequest__Descriptor = Descriptor.MessageTypes[0];
        internal__static_virtuos_ActionCommitedRequest__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::Com.Virtuos.Rocket.NetworkMessage.ActionCommitedRequest, global::Com.Virtuos.Rocket.NetworkMessage.ActionCommitedRequest.Builder>(internal__static_virtuos_ActionCommitedRequest__Descriptor,
                new string[] { "GameId", "TurnIndex", });
        global::Com.Virtuos.Rocket.NetworkMessage.ActionCommitedRequest.RequestNumber = pb::GeneratedSingleExtension<global::Com.Virtuos.Rocket.NetworkMessage.ActionCommitedRequest>.CreateInstance(global::Com.Virtuos.Rocket.NetworkMessage.ActionCommitedRequest.Descriptor.Extensions[0]);
        pb::ExtensionRegistry registry = pb::ExtensionRegistry.CreateInstance();
        RegisterAllExtensions(registry);
        global::Google.ProtocolBuffers.DescriptorProtos.CSharpOptions.RegisterAllExtensions(registry);
        global::Com.Virtuos.Rocket.NetworkMessage.BaseProtos.RegisterAllExtensions(registry);
        return registry;
      };
      pbd::FileDescriptor.InternalBuildGeneratedFileFrom(descriptorData,
          new pbd::FileDescriptor[] {
          global::Google.ProtocolBuffers.DescriptorProtos.CSharpOptions.Descriptor, 
          global::Com.Virtuos.Rocket.NetworkMessage.BaseProtos.Descriptor, 
          }, assigner);
    }
    #endregion
    
  }
  #region Messages
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class ActionCommitedRequest : pb::GeneratedMessage<ActionCommitedRequest, ActionCommitedRequest.Builder> {
    private ActionCommitedRequest() { }
    private static readonly ActionCommitedRequest defaultInstance = new ActionCommitedRequest().MakeReadOnly();
    private static readonly string[] _actionCommitedRequestFieldNames = new string[] { "game_id", "turn_index" };
    private static readonly uint[] _actionCommitedRequestFieldTags = new uint[] { 16, 24 };
    public static ActionCommitedRequest DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override ActionCommitedRequest DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override ActionCommitedRequest ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::Com.Virtuos.Rocket.NetworkMessage.GameProtos.internal__static_virtuos_ActionCommitedRequest__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<ActionCommitedRequest, ActionCommitedRequest.Builder> InternalFieldAccessors {
      get { return global::Com.Virtuos.Rocket.NetworkMessage.GameProtos.internal__static_virtuos_ActionCommitedRequest__FieldAccessorTable; }
    }
    
    public const int RequestNumberFieldNumber = 523;
    public static pb::GeneratedExtensionBase<global::Com.Virtuos.Rocket.NetworkMessage.ActionCommitedRequest> RequestNumber;
    public const int GameIdFieldNumber = 2;
    private bool hasGameId;
    private long gameId_;
    public bool HasGameId {
      get { return hasGameId; }
    }
    public long GameId {
      get { return gameId_; }
    }
    
    public const int TurnIndexFieldNumber = 3;
    private bool hasTurnIndex;
    private int turnIndex_;
    public bool HasTurnIndex {
      get { return hasTurnIndex; }
    }
    public int TurnIndex {
      get { return turnIndex_; }
    }
    
    public override bool IsInitialized {
      get {
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      CalcSerializedSize();
      string[] field_names = _actionCommitedRequestFieldNames;
      if (hasGameId) {
        output.WriteInt64(2, field_names[0], GameId);
      }
      if (hasTurnIndex) {
        output.WriteInt32(3, field_names[1], TurnIndex);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        return CalcSerializedSize();
      }
    }
    
    private int CalcSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
      
      size = 0;
      if (hasGameId) {
        size += pb::CodedOutputStream.ComputeInt64Size(2, GameId);
      }
      if (hasTurnIndex) {
        size += pb::CodedOutputStream.ComputeInt32Size(3, TurnIndex);
      }
      size += UnknownFields.SerializedSize;
      memoizedSerializedSize = size;
      return size;
    }
    public static ActionCommitedRequest ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static ActionCommitedRequest ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static ActionCommitedRequest ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static ActionCommitedRequest ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static ActionCommitedRequest ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static ActionCommitedRequest ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static ActionCommitedRequest ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static ActionCommitedRequest ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static ActionCommitedRequest ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static ActionCommitedRequest ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private ActionCommitedRequest MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(ActionCommitedRequest prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class Builder : pb::GeneratedBuilder<ActionCommitedRequest, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(ActionCommitedRequest cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private ActionCommitedRequest result;
      
      private ActionCommitedRequest PrepareBuilder() {
        if (resultIsReadOnly) {
          ActionCommitedRequest original = result;
          result = new ActionCommitedRequest();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override ActionCommitedRequest MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::Com.Virtuos.Rocket.NetworkMessage.ActionCommitedRequest.Descriptor; }
      }
      
      public override ActionCommitedRequest DefaultInstanceForType {
        get { return global::Com.Virtuos.Rocket.NetworkMessage.ActionCommitedRequest.DefaultInstance; }
      }
      
      public override ActionCommitedRequest BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is ActionCommitedRequest) {
          return MergeFrom((ActionCommitedRequest) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(ActionCommitedRequest other) {
        if (other == global::Com.Virtuos.Rocket.NetworkMessage.ActionCommitedRequest.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasGameId) {
          GameId = other.GameId;
        }
        if (other.HasTurnIndex) {
          TurnIndex = other.TurnIndex;
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_actionCommitedRequestFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _actionCommitedRequestFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 16: {
              result.hasGameId = input.ReadInt64(ref result.gameId_);
              break;
            }
            case 24: {
              result.hasTurnIndex = input.ReadInt32(ref result.turnIndex_);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasGameId {
        get { return result.hasGameId; }
      }
      public long GameId {
        get { return result.GameId; }
        set { SetGameId(value); }
      }
      public Builder SetGameId(long value) {
        PrepareBuilder();
        result.hasGameId = true;
        result.gameId_ = value;
        return this;
      }
      public Builder ClearGameId() {
        PrepareBuilder();
        result.hasGameId = false;
        result.gameId_ = 0L;
        return this;
      }
      
      public bool HasTurnIndex {
        get { return result.hasTurnIndex; }
      }
      public int TurnIndex {
        get { return result.TurnIndex; }
        set { SetTurnIndex(value); }
      }
      public Builder SetTurnIndex(int value) {
        PrepareBuilder();
        result.hasTurnIndex = true;
        result.turnIndex_ = value;
        return this;
      }
      public Builder ClearTurnIndex() {
        PrepareBuilder();
        result.hasTurnIndex = false;
        result.turnIndex_ = 0;
        return this;
      }
    }
    static ActionCommitedRequest() {
      object.ReferenceEquals(global::Com.Virtuos.Rocket.NetworkMessage.GameProtos.Descriptor, null);
    }
  }
  
  #endregion
  
}

#endregion Designer generated code
